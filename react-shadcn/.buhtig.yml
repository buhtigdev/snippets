name: react-shadcn
description: Adiciona componentes ShadCN a um projeto React com Tailwind CSS
actions:
  - type: detect-package-manager

  # Verificar e instalar dependências necessárias
  - type: install
    dev: true
    packages:
      - tailwindcss
      - postcss
      - autoprefixer

  # Inicializar Tailwind se os arquivos de configuração não existirem
  - type: detect-file
    path: tailwind.config.js
    notFoundActions:
      - type: run
        command: npx tailwindcss init -p
      
      - type: merge-file
        target: tailwind.config.js
        content: |
          /** @type {import('tailwindcss').Config} */
          module.exports = {
            content: [
              "./app/**/*.{js,ts,jsx,tsx,mdx}",
              "./pages/**/*.{js,ts,jsx,tsx,mdx}",
              "./components/**/*.{js,ts,jsx,tsx,mdx}",
              "./src/**/*.{js,ts,jsx,tsx,mdx}",
            ],
            theme: {
              extend: {},
            },
            plugins: [],
          }

  # Verificar globals.css em src/app (caso de Next.js app router)
  - type: detect-file
    path: src/app/globals.css
    notFoundActions:
      # Se não existe, verificar se a pasta src/app existe
      - type: detect-file
        path: src/app
        notFoundActions:
          # Se a pasta src/app não existir, criar
          - type: mkdir
            dirs:
              - src/app
          - type: merge-file
            target: src/app/globals.css
            content: |
              @tailwind base;
              @tailwind components;
              @tailwind utilities;

  # Se src/app/globals.css existe, verificar se já tem as diretivas Tailwind
  - type: run
    command: |
      if [ -f "src/app/globals.css" ]; then
        if ! grep -q "@tailwind base" "src/app/globals.css"; then
          echo -e "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n$(cat src/app/globals.css)" > src/app/globals.css.tmp
          mv src/app/globals.css.tmp src/app/globals.css
          echo "✅ Adicionadas diretivas Tailwind ao src/app/globals.css existente"
        else
          echo "✅ O arquivo src/app/globals.css já possui diretivas Tailwind"
        fi
      fi

  # Verificar alternativo: src/globals.css (caso de setup mais antigo)
  - type: detect-file
    path: src/globals.css
    notFoundActions:
      - type: merge-file
        target: src/globals.css
        content: |
          @tailwind base;
          @tailwind components;
          @tailwind utilities;

  # Se src/globals.css existe, verificar se já tem as diretivas Tailwind
  - type: run
    command: |
      if [ -f "src/globals.css" ]; then
        if ! grep -q "@tailwind base" "src/globals.css"; then
          echo -e "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n$(cat src/globals.css)" > src/globals.css.tmp
          mv src/globals.css.tmp src/globals.css
          echo "✅ Adicionadas diretivas Tailwind ao src/globals.css existente"
        else
          echo "✅ O arquivo src/globals.css já possui diretivas Tailwind"
        fi
      fi

  # Atualizar o components.json para apontar para o arquivo correto
  - type: detect-file
    path: components.json
    notFoundActions:
      - type: install
        packages:
          - class-variance-authority
          - clsx
          - tailwind-merge
          - lucide-react
      
      - type: run
        command: |
          if [ -f "src/app/globals.css" ]; then
            echo '{ "css": "src/app/globals.css" }' > .globals-path.json
          else
            echo '{ "css": "src/globals.css" }' > .globals-path.json
          fi
      
      - type: merge-file
        target: components.json
        content: |
          {
            "$schema": "https://ui.shadcn.com/schema.json",
            "style": "default",
            "rsc": false,
            "tailwind": {
              "config": "tailwind.config.js",
              "css": "src/app/globals.css",
              "baseColor": "slate",
              "cssVariables": false
            },
            "aliases": {
              "components": "@/components",
              "utils": "@/lib/utils"
            }
          }
      
      # Corrigir o caminho do CSS no components.json caso seja necessário
      - type: run
        command: |
          if [ -f ".globals-path.json" ]; then
            CSS_PATH=$(node -e "console.log(JSON.parse(require('fs').readFileSync('.globals-path.json')).css)")
            node -e "
              const fs = require('fs');
              const components = JSON.parse(fs.readFileSync('components.json'));
              components.tailwind.css = '$CSS_PATH';
              fs.writeFileSync('components.json', JSON.stringify(components, null, 2));
            "
            rm .globals-path.json
          fi
      
      - type: mkdir
        dirs:
          - src/components/ui
          - src/lib
      
      - type: merge-file
        target: src/lib/utils.ts
        content: |
          import { type ClassValue, clsx } from "clsx"
          import { twMerge } from "tailwind-merge"
          
          export function cn(...inputs: ClassValue[]) {
            return twMerge(clsx(inputs))
          }

  # Instalar componentes Shadcn
  - type: run
    command: npx shadcn@latest add button

  # Instalar componentes adicionais
  - type: run
    command: npx shadcn@latest add accordion alert-dialog alert badge card checkbox dialog dropdown-menu input label menubar navigation-menu popover progress radio-group scroll-area select separator skeleton slider switch table tabs textarea sonner toggle tooltip 
